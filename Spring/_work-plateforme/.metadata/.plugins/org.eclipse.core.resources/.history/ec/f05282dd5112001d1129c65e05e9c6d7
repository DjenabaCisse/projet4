package com.mood.login.http.controleur;

import java.net.URI;
import java.util.List;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.http.ResponseEntity;
import org.springframework.web.bind.annotation.CrossOrigin;
import org.springframework.web.bind.annotation.DeleteMapping;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.PutMapping;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.ResponseBody;
import org.springframework.web.bind.annotation.RestController;
import org.springframework.web.servlet.support.ServletUriComponentsBuilder;

import com.mood.login.dao.UserRepository;
import com.mood.login.modele.User;

@RestController
@CrossOrigin(origins = "*")
@RequestMapping(path="/previt")
public class UserController {
	
	@Autowired
	private UserRepository userRepository; 
	
	@PostMapping(path="/addUser")
	public ResponseEntity<Void> createUser(@RequestBody User user) {
		
		User addUser = userRepository.save(user);
		
			if (addUser == null)
					return ResponseEntity.noContent().build();
			
				URI uri = ServletUriComponentsBuilder 
						.fromCurrentRequest()
						.path("/{id}")
						.buildAndExpand(addUser.getId())
						.toUri();
				return ResponseEntity.created(uri).build();
		
	}
	
	
	
	@GetMapping(path="/users")
	public @ResponseBody Iterable<User> getAllUser() {
		return userRepository.findAll();
	}
	
	/*
	@DeleteMapping (path="/User/{id}")     
    public void supprimerAssurer(@PathVariable Integer id) {
     userRepository.deleteById(id);        
    }
    */
	
	
	@PutMapping (path="/updateUser")    
    public void updateUser (@RequestBody User user) {

      userRepository.save(user);
    }
	


}
